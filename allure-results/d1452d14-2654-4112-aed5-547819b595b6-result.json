{"name": "新增商品分类", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 登录页面.用户名输入框定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式", "trace": "self = <tools.ui.get_pages.Pages object at 0x000001B892CD8A20>, locator = '登录页面.用户名输入框'\n\n    def get_element(self,locator):\n        '''\n        根据传入的数据来定位页面元素\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :return: 元素定位结果\n        '''\n    \n        try:\n>           return self.wait_util_visibility(locator)\n\ntools\\ui\\base_ui.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tools.ui.get_pages.Pages object at 0x000001B892CD8A20>, locator = ('xpath', '//input[@placeholder=\"请输入用户名\"]')\nsecs = 10\n\n    def wait_util_visibility(self, locator, secs=10):\n        '''\n        显示等待页面元素的出现，并返回元素对象\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :param secs: 最长等待时间\n        :return:元素对象\n        '''\n        locator = self.get_locator(locator)\n        try:\n            element = WebDriverWait(self.driver, secs).until(\n                EC.visibility_of_element_located(locator))\n            return element\n        except Exception as e:\n>           raise e\n\ntools\\ui\\base_ui.py:701: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tools.ui.get_pages.Pages object at 0x000001B892CD8A20>, locator = ('xpath', '//input[@placeholder=\"请输入用户名\"]')\nsecs = 10\n\n    def wait_util_visibility(self, locator, secs=10):\n        '''\n        显示等待页面元素的出现，并返回元素对象\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :param secs: 最长等待时间\n        :return:元素对象\n        '''\n        locator = self.get_locator(locator)\n        try:\n            element = WebDriverWait(self.driver, secs).until(\n>               EC.visibility_of_element_located(locator))\n\ntools\\ui\\base_ui.py:698: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5cbc42e551db662d12437b6cd6943495\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000001B8932AF3C8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\ne:\\env\\auto_ui\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <tools.ui.get_pages.Pages object at 0x000001B892CD8A20>\n\n    @allure.feature(\"商品模块\")\n    @allure.story(\"商品分类\")\n    @allure.title(\"新增商品分类\")\n    def test_add_product_cate(driver):\n>       login_page.login(driver)\n\ntest_case\\demo\\test_product_cate.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest_case\\business\\login_page.py:7: in login\n    driver.send_keys(\"登录页面.用户名输入框\",\"admin\")\ntools\\report\\retry_tool.py:17: in _wrapper\n    raise raise_ex\ntools\\report\\retry_tool.py:12: in _wrapper\n    return func(*args,**kwargs)\ntools\\ui\\base_ui.py:231: in send_keys\n    element = self.get_element(locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tools.ui.get_pages.Pages object at 0x000001B892CD8A20>, locator = '登录页面.用户名输入框'\n\n    def get_element(self,locator):\n        '''\n        根据传入的数据来定位页面元素\n        :param locator: 定位语句 例如：xpath=>//*[@id='kw']\n        :return: 元素定位结果\n        '''\n    \n        try:\n            return self.wait_util_visibility(locator)\n        except TimeoutException:\n            time_out_error = \"{}定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式\".format(locator)\n            log_tool.error(time_out_error)\n>           raise TimeoutException(time_out_error)\nE           selenium.common.exceptions.TimeoutException: Message: 登录页面.用户名输入框定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式\n\ntools\\ui\\base_ui.py:125: TimeoutException"}, "steps": [{"name": "登录页面登录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: 登录页面.用户名输入框定位元素超时，请检查定为语句是否正确，或者尝试其他定位方式\n\n", "trace": "  File \"e:\\env\\auto_ui\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\workspace\\python\\auto_ui_demo\\test_case\\business\\login_page.py\", line 7, in login\n    driver.send_keys(\"登录页面.用户名输入框\",\"admin\")\n  File \"E:\\workspace\\python\\auto_ui_demo\\tools\\report\\retry_tool.py\", line 17, in _wrapper\n    raise raise_ex\n  File \"E:\\workspace\\python\\auto_ui_demo\\tools\\report\\retry_tool.py\", line 12, in _wrapper\n    return func(*args,**kwargs)\n  File \"E:\\workspace\\python\\auto_ui_demo\\tools\\ui\\base_ui.py\", line 231, in send_keys\n    element = self.get_element(locator)\n  File \"E:\\workspace\\python\\auto_ui_demo\\tools\\ui\\base_ui.py\", line 125, in get_element\n    raise TimeoutException(time_out_error)\n"}, "parameters": [{"name": "driver", "value": "<tools.ui.get_pages.Pages object at 0x000001B892CD8A20>"}], "start": 1603437375829, "stop": 1603437418007}, {"name": "登录页面.用户名输入框操作失败", "status": "passed", "attachments": [{"name": "操作失败", "source": "9e4bed0b-b2db-4b6d-abfa-ef46a67b21cf-attachment.png", "type": "image/png"}], "start": 1603437418116, "stop": 1603437418327}], "attachments": [{"name": "log", "source": "7e36c8d6-df40-46fd-bee7-65feecfe99a3-attachment.txt", "type": "text/plain"}], "start": 1603437375828, "stop": 1603437418020, "uuid": "28029c87-2c39-4443-b232-c54777f07457", "historyId": "b295f374a57fbd17f2fdaa9d9fc3c0f8", "testCaseId": "69a4ed9af51cd4d7c66ed6287ef4c514", "fullName": "test_case.demo.test_product_cate#test_add_product_cate", "labels": [{"name": "story", "value": "商品分类"}, {"name": "feature", "value": "商品模块"}, {"name": "parentSuite", "value": "test_case.demo"}, {"name": "suite", "value": "test_product_cate"}, {"name": "host", "value": "DESKTOP-E8M2OFV"}, {"name": "thread", "value": "51280-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.demo.test_product_cate"}]}